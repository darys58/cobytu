

*** układ poziomy ***  

                Card( child: Row( 
                  children: <Widget>[ 
                    Expanded( 
                      flex: 7, 
                      child: Padding( 
                        padding: EdgeInsets.all(20.0), 
                        child: Column( 
                          mainAxisSize:MainAxisSize.min, 
                          crossAxisAlignment: CrossAxisAlignment.start, 
                          children:<Widget>[ 
                            getTitle("UEC607"), 
                            getSubName("Data Communication & Protocol"),
                            getVenue("E-204"), 
                          ], 
                        ), 
                      ), 
                    ), 
                    Expanded( 
                      flex: 3, child: 
                      Container( 
                        color: Colors.blue, 
                        child: Column( 
                          mainAxisSize: MainAxisSize.max, 
                          children:<Widget>[ 
                            getType("L"), 
                            getTime("10:00"), 
                          ], 
                        ), 
                      ), 
                    ) 
                  ], 
                ), 
                ) 
              ], 

*** tytuł dania na przezroczystym tle - mozna umieścić np. na zdjęciu ***

                Positioned(
                  //pozwala w stosie umieścić widget w absolutnej przestrzeni współrzędnych
                  bottom: 20, //od dołu obrazka
                  right: 10, //od prawej obrazka
                  child: Container(
                    //pojemnik ograniczający tytuł
                    width: 300, //serokość pojemnika
                    color: Colors.black54, //kolor tła z przeźroczystością
                    padding: EdgeInsets.symmetric(
                      //odstępy wewnątrz pojenmika
                      vertical: 5,
                      horizontal: 20,
                    ),
                    child: Text(
                      nazwa,
                      style: TextStyle(
                        fontSize: 26,
                        color: Colors.white,
                      ),
                      softWrap: true, //zawijanie tekstu
                      overflow: TextOverflow
                          .fade, //skracanie tekstu zeby zmieścił sie
                    ),
                  ),
                )
*** całkowicie wypełnia dostepną przestrzeń między dwoma elementami
Spacer(),
 
 *** pętla for
 count = data.length;
 for (var i = 0; i < count; i++) {
    myListData.add(MyList.fromObject(data[i]));
  }

  setState(() {
    myList = myListData;
    count = count;  
  });  
   
   var count = _pom.length; //ilość województw
     // for (var i = 0; i < count; i++) {
     //   _wojew.add(_pom[i].woj);  //utworzenie listy województw    
     // } 

  **** pojedyncze wartości z listy          

  /*Use toSet and then toList  
  https://stackoverflow.com/questions/12030613/how-to-delete-duplicates-in-a-dart-list-list-distinct

  var ids = [1, 4, 4, 4, 5, 6, 6];
  var distinctIds = ids.toSet().toList();
[1, 4, 5, 6]

****** karta z zaokrąglonymi rogami
ClipRRect( //belka po lewej - element opakowania obrazka zeby zaokrąglić rogi
  borderRadius: BorderRadius.only(
    bottomLeft: Radius.circular(15),
    topLeft: Radius.circular(15),
  ),
  child: Container( 
    width: 10,
    height: 110,
    color: Colors.red, 
  ),
),

****** ikona jako przycisk
 IconButton(
    icon: Icon(
    meal.fav == '1' ? Icons.favorite : Icons.favorite_border
  ),
  onPressed: (){
    meal.toggleFavoriteStatus();
  },
),

****** przycisk pływająy
   floatingActionButton: FloatingActionButton(
        child: Icon(
          isFavorite(mealId) ? Icons.star : Icons.star_border,
        ),
        onPressed: () => toggleFavorite(mealId),

 ***** nawigacja między stronami       
        //() {
        //  Navigator.of(context).pop(mealId); //pop zdejmuje ekran ze stosu (podobnie jak przycisk "wstecz" <-), //mona w ten sposób zamyka okna dialogowe np.
          //popAndPushNamed   - wyrzuca biezącą stronę i wypycha nowa nazwaną stronę. Przekazuje tez argument mealID na stronę z której przyszadł
        //},
      ),

********  pozioma szara linia
 Divider() //pozioma szara linia

 ******* lista numerowana automatycznie
 buildSectionTitle(context, 'Steps'),
  buildContainer(
    ListView.builder(
      itemBuilder: (ctx, index) => Column(
        children: [
          ListTile(
            leading: CircleAvatar(
              child: Text('# ${(index + 1)}'),
            ),
            title: Text(
              selectedMeal.steps[index],
            ),
          ),
          Divider() //pozioma szara linia
        ],
      ),
      itemCount: selectedMeal.steps.length, //ilość elementów listy
    ),
  ),

******* z apki z kursu
return Scaffold(
      appBar: AppBar(
        title: Text('${selectedMeal.title}'),
      ),
      body: SingleChildScrollView(
        child: Column(
          children: <Widget>[
            Container(
              //zdjęcie dania
              height: 300,
              width: double.infinity,
              child: Image.network(
                selectedMeal.imageUrl,
                fit: BoxFit.cover, //dopasowanie do pojemnika
              ),
            ),
           // buildSectionTitle(
              //  context, 'Ingredients'), //zamiast tego co nizej zaremowane
            
            //frafment zamieniony wyzej na widget zeby nie powtarzać kodu w wielu miejscach
            Container(  //napis Ingriediens
              margin: EdgeInsets.symmetric(vertical: 10),
              child: Text(
                'Ingredients',
                style: Theme.of(context).textTheme.title,
              ),
            ),
            

            
            //opis jak wyzej
            Container(
              //lista składników
              decoration: BoxDecoration(
                color: Colors.white,
                border: Border.all(color: Colors.grey),
                borderRadius: BorderRadius.circular(10),
              ),
              margin: EdgeInsets.all(10),
              padding: EdgeInsets.all(10),
              height: 200,
              width: 300,
              child: ListView.builder( ..... było to co nizej
              
           // buildContainer(
           /  ListView.builder(
                itemBuilder: (ctx, index) => Card(
                  //budowanie listy
                  color: Theme.of(context).accentColor,
                  child: Padding(
                    padding: EdgeInsets.symmetric(
                      vertical: 5,
                      horizontal: 10,
                    ),
                    child: Text(
                      selectedMeal.ingredients[index],
                    ),
                  ),
                ),
                itemCount: selectedMeal.ingredients.length,
              ),
            ),
            
            
          ],
        ),
      ),
   
    );
  }
}


  szuflada od dołu
  void _onButtonPressed() {
    showModalBottomSheet(
        context: context,
        builder: (context) {
          return Container(
            color: Color(0xFF737373),
            height: 180,
            child: Container(
              child: _buildBottomNavigationMenu(),
              decoration: BoxDecoration(
                color: Theme.of(context).canvasColor,
                borderRadius: BorderRadius.only(
                  topLeft: const Radius.circular(10),
                  topRight: const Radius.circular(10),
                ),
              ),
            ),
          );
        });
  }

  Column _buildBottomNavigationMenu() {
    return Column(
      children: <Widget>[
        ListTile(
          leading: Icon(Icons.ac_unit),
          title: Text('Cooling'),
          onTap: () => _selectItem('Cooling'),
        ),
        ListTile(
          leading: Icon(Icons.accessibility_new),
          title: Text('People'),
          onTap: () => _selectItem('People'),
        ),
        ListTile(
          leading: Icon(Icons.assessment),
          title: Text('Stats'),
          onTap: () => _selectItem('Stats'),
        ),
      ],
    );
  }

  void _selectItem(String name) {
    Navigator.pop(context);
    setState(() {
      _selectedItem = name;
      print(_selectedItem);
    });
  }


*/